grep(基本正则表达式), egrep(扩展正则表达式), fgrep(无正则,只查找)	

grep: 根据模式搜索文本，并将符合模式的文本行显示出来。
Pattern: 文本字符和正则表达式的元字符组合而成匹配条件

grep [options] PATTERN [FILE...]
	-i 区分大小写
	--color 批配颜色
	-v: 显示没有被模式匹配到的行
	-o：只显示被模式匹配到的字符串

	
*: 任意长度的任意字符0-n
?: 任意单个字符0-n
[]:
[^]:	

正则表达式：REGular EXPression, REGEXP
元字符：
.: 匹配任意单个字符
[]: 匹配指定范围内的任意单个字符
[^]：匹配指定范围外的任意单个字符
字符集合：[:digit:], [:lower:], [:upper:], [:punct:], [:space:], [:alpha:], [:alnum:]

匹配次数（贪婪模式）：
*: 匹配其前面的字符任意次	
	a, b, ab, aab, acb, adb, amnb
	a*b， a?b
	a.*b

	.*: 任意长度的任意字符
	\?: 匹配其前面的字符1次或0次
	\{m,n\}:匹配其前面的字符至少m次，至多n次
	\{1,\}
	\{0,3\}

位置锚定：
^: 锚定行首，此字符后面的任意内容必须出现在行首
$: 锚定行尾，此字符前面的任意内容必须出现在行尾
注意 : ^$: 空白行 

\<或\b: 锚定词首，其后面的任意字符必须作为单词首部出现
\>或\b: 锚定词尾，其前面的任意字符必须作为单词的尾部出现

分组：分组主要应用出现相同字符串中
\(\)
	\(ab\)*
	后向引用
	\1: 引用第一个左括号以及与之对应的右括号所包括的所有内容
	\2:
	\3:
注意是shell语言中可解析(){}?123时当做自己的语法来解析,所以要加转义字符
REGEXP：REGular EXPression
Pattern: 

正则表达式：
	Basic REGEXP：基本
	Extended REGEXP：扩展

基本正则表达式：
.: 
[]: 
[^]:

次数匹配：
*: 
\?: 0或1次
\{m,n\}：至少m次，至多n次；

.*: 

锚定：
^:
$:
\<, \b:
\>, \b:

\(\)
\1, \2, \3, ...

grep：使用基本正则表达式定义的模式来过滤文本的命令；
	-i
	-v
	-o
	--color
	-E: 使用扩展正则表达式
	-A #: 
	-B #:
	-C #:
	
扩展正则表达式：

字符匹配：
.
[]
[^]

次数匹配：
*: 
?:
+: 匹配其前面的字符至少1次
{m,n}

位置锚定：
^
$
\<
\>

分组：
()：分组
\1, \2, \3, ...

或者
|: or
C|cat:C或cat
(C|c)at:Cat或cat,
grep -E = egrep 


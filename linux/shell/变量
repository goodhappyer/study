bash变量类型：
	环境变量
	本地变量(局部变量)
	位置变量
	特殊变量
	
本地变量：
set VARNAME=VALUE: 作用域为整个bash进程；

局部变量：
local VARNAME=VALUE：作用域为当前代码段；

环境变量：作用域为当前shell进程及其子进程；
export VARNAME=VALUE (直接定义)

VARNAME=VALUE (先定义成本地变量,再导出为环璄量,只和当前,和子SHELL有关)
export VARNAME
	“导出”

位置变量：(用$引用)
$1, $2, ...

特殊变量：
$?: 上一个命令的执行状态返回值；

程序执行，可能有两类返回值：
	程序执行结果
	程序状态返回代码（0-255）
		0: 正确执行
		1-255：错误执行，
		1，2，127系统预留；
//==========================

//======================
输出重定向：
>  把标准输出重定向到一个新文件中
>> 把标准输出重定向到一个文件中(追加)
2> 把标准错误重定向到一个文件中
2>>把标准错误重定向到一个文件中(追加)
&> 把标准输出和标准错误一起重定向到一个文件中
&>> 把标准输出和标准错误一起重定向到一个文件中(追加)
撤消变量：
unset VARNAME 注意:无$,如果有$则为变理的值

查看当shell中变量：
set

查看当前shell中的环境变量：
printenv
env
export

脚本：命令的堆砌，按实际需要，结合命令流程控制机制实现的源程序

shebang: 魔数
#!/bin/bash
# 注释行，不执行



/dev/null: 软件设备， bit bucket，数据黑洞	

	
脚本在执行时会启动一个子shell进程；
	命令行中启动的脚本会继承当前shell环境变量；
	系统自动执行的脚本(非命令行启动)就需要自我定义需要各环境变量；


变量名称：
	1、只能包含字母、数字和下划线，并且不能数字开头；
	2、不应该跟系统中已有的环境变量重名；
	3、最好做到见名知义；
